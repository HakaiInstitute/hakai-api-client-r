[{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Hakai Institute Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/articles/filtering.html","id":"filtering-data-with-the-api","dir":"Articles","previous_headings":"","what":"Filtering data with the API","title":"Filtering Example","text":"’s simple demonstration filter data API. API limits terms much data can download one query. , instead querying data certain type, ’s good narrow time period, sites, parameters really interested . Though API many options querying, filtering, sorting data, R users comfortable filtering data using R packages dplyr. good way build query steps. Let’s say want chlorophyll data QU39, 2016, accepted values, glass fibre filters (GF/F) surface. Let’s say ’re interested receiving highest 10 values chlorophyll 2017 portal. can API well using sort descending capability limiting return 10 values. great querying capabilities see querying-data docs","code":"# First return some chl data with no filters endpoint <- \"/eims/views/output/chlorophyll\" all_chl <- client$get(paste0(client$api_root, endpoint)) # by default only 20 rows are returned str(all_chl) # Look at what columns are available to filter on  # Narrow it down to QU39 query <- \"?site_id=QU39\" client$get(paste0(client$api_root, endpoint, query))  #Get back only accepted values query <- \"?site_id=QU39&chla_flag=AV\" client$get(paste0(client$api_root, endpoint, query))  # Get values from 2017 query <- \"?site_id=QU39&chla_flag=AV&date.year=2017\" client$get(paste0(client$api_root, endpoint, query))  # Include only GF/F from the surface # It may be useful to split up the queries and rejoin them over multiple lines # Using the paste() or paste0() functions query <- paste(   \"site_id=QU39\",   \"chla_flag=AV\",   \"date.year=2017\",   \"filter_type=GF/F\",   \"line_out_depth=0\",   sep = \"&\" ) client$get(paste0(client$api_root, endpoint, \"?\", query))  # Select only the columns I'm interested in query <- paste(   \"site_id=QU39\",   \"chla_flag=AV\",   \"date.year=2017\",   \"filter_type=GF/F\",   \"line_out_depth=0\",   \"fields=date,chla,lab_technician\",   sep = \"&\" ) client$get(paste0(client$api_root, endpoint, \"?\", query))  # This looks good so now you can assign a variable and remove the limit query <- paste(   \"site_id=QU39\",   \"chla_flag=AV\",   \"date.year=2017\",   \"filter_type=GF/F\",   \"line_out_depth=0\",   \"fields=date,chla,lab_technician\",   \"limit=-1\",   sep = \"&\" ) a_great_chl_query <- client$get(paste0(client$api_root, endpoint, \"?\", query))  plot(   a_great_chl_query$date,   a_great_chl_query$chla,   xlim = as.Date(c(\"2017-01-01\", \"2018-01-01\")),   ylim = c(0, 5) ) endpoint <- \"/eims/views/output/chlorophyll\" query <- paste(   \"fields=date,chla,site_id,line_out_depth\",   \"chla>0\", # Note: added chla>0 to remove NA values   \"date.year=2017\",   \"sort=-chla\",   \"limit=10\",   sep = \"&\" ) top_10_chl <- client$get(paste0(client$api_root, endpoint, \"?\", query))"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Albers. Author, maintainer. Taylor Denouden. Author. Brett Johnson. Author. Nate Rosenstock. Contributor. Chris Davis. Contributor. Hakai Institute. Copyright holder.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Albers S, Denouden T, Johnson B (2025). hakaiApi: Authenticated HTTP Request Client 'Hakai' API. R package version 1.0.5.9000, https://github.com/HakaiInstitute/hakai-api-client-r.","code":"@Manual{,   title = {hakaiApi: Authenticated HTTP Request Client for the 'Hakai' API},   author = {Sam Albers and Taylor Denouden and Brett Johnson},   year = {2025},   note = {R package version 1.0.5.9000},   url = {https://github.com/HakaiInstitute/hakai-api-client-r}, }"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"hakai-api-r-client","dir":"","previous_headings":"","what":"Authenticated HTTP Request Client for the Hakai API","title":"Authenticated HTTP Request Client for the Hakai API","text":"project exports single R6 class R programming language can used make HTTP requests Hakai API resource server. Class provides “get” method make Authenticated requests Hakai API data server without needing know details authentication process.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Authenticated HTTP Request Client for the Hakai API","text":"using library, install environment using one following R script:","code":"# From CRAN install.packages(\"hakaiApi\")  # OR, the latest version from GitHub install.packages(\"remotes\") remotes::install_github(\"HakaiInstitute/hakai-api-client-r\", subdir='hakaiApi')"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Authenticated HTTP Request Client for the Hakai API","text":"","code":"# Initialize the client client <- hakaiApi::Client$new(\"https://hecate.hakai.org\")  # Request some data (request chlorophyll data here) data <- client$get(\"api/eims/views/output/chlorophyll?limit=50\")  # View out the data View(data)"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"methods","dir":"","previous_headings":"","what":"Methods","title":"Authenticated HTTP Request Client for the Hakai API","text":"library exports single class named Client. Instantiating class $new method sets credentials requests using $get method. hakai_api Client class also contains property api_root useful constructing urls access data API. Quickstart example demonstrates using property construct url access chlorophyll data. reason credentials become corrupted stop working, method remove old cached credentials account can re-authenticate. just client$remove_old_credentials().","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"api-endpoints","dir":"","previous_headings":"","what":"API endpoints","title":"Authenticated HTTP Request Client for the Hakai API","text":"details API, including available endpoints data can requested, see Hakai API documentation.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"advanced-usage","dir":"","previous_headings":"","what":"Advanced usage","title":"Authenticated HTTP Request Client for the Hakai API","text":"can specify API access instantiating Client. default, API uses https://hecate.hakai.org/api API root. may useful use library access locally running API instance access Goose API testing purposes.","code":"# Get a client for a locally running API instance client <- hakaiApi::Client$new(\"localhost:8666\") print(client$api_root) # http://localhost:8666"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Authenticated HTTP Request Client for the Hakai API","text":"class defines number public private variables methods make request client work. development class largely informed R project’s R6 class documentation. build class R package, tutorial followed.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/index.html","id":"author","dir":"","previous_headings":"Contributing","what":"Author","title":"Authenticated HTTP Request Client for the Hakai API","text":"Sam Albers (sam.albers@hakai.org) Taylor Denouden (taylor.denouden@hakai.org) Copyright (c) 2025 Hakai Institute individual contributors Rights Reserved.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":null,"dir":"Reference","previous_headings":"","what":"The Hakai API Client Class — Client","title":"The Hakai API Client Class — Client","text":"Class use make authenticated API requests Hakai data. Credentials can provided via HAKAI_API_TOKEN environment variable credentials file.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The Hakai API Client Class — Client","text":"api_root api_root logged ","code":""},{"path":[]},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The Hakai API Client Class — Client","text":"Client$new() Client$get() Client$get_stations() Client$post() Client$put() Client$patch() Client$remove_credentials() Client$clone()","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The Hakai API Client Class — Client","text":"Log Google gain credential access API","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$new(   api_root = \"https://hecate.hakai.org/api\",   login_page = \"https://hecate.hakai.org/api-client-login\",   credentials_file = NULL )"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Hakai API Client Class — Client","text":"api_root Optional API base url fetch data. Defaults \"https://hecate.hakai.org/api\" login_page Optional API login page url display user. Defaults \"https://hecate.hakai.org/api-client-login\" credentials_file Optional path credentials cache file. Defaults file user's data directory determined tools::R_user_dir()","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Hakai API Client Class — Client","text":"Credentials can provided two ways: 1. Via HAKAI_API_TOKEN environment variable (contains query string: \"token_type=Bearer&access_token=...\") 2. Via credentials file (default: user data directory via tools::R_user_dir()) environment variable takes precedence available.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The Hakai API Client Class — Client","text":"client instance","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Hakai API Client Class — Client","text":"","code":"try(    client <- Client$new() ) # Using environment variable Sys.setenv(HAKAI_API_TOKEN = \"token_type=Bearer&access_token=TOKEN\") try(    client <- Client$new() ) # Using custom credentials file try(    client <- Client$new(credentials_file = \"/path/to/creds\") )"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"The Hakai API Client Class — Client","text":"Send GET request API","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$get(endpoint_url, col_types = NULL)"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Hakai API Client Class — Client","text":"endpoint_url API endpoint url - can full URL relative path appended api_root col_types readr type specification","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The Hakai API Client Class — Client","text":"dataframe requested data","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"The Hakai API Client Class — Client","text":"","code":"try(client$get(\"/aco/views/projects\")) try(client$get(\"https://hecate.hakai.org/api/aco/views/projects\"))"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-get-stations-","dir":"Reference","previous_headings":"","what":"Method get_stations()","title":"The Hakai API Client Class — Client","text":"Get recent sensor nodes locations sf object","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$get_stations()"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The Hakai API Client Class — Client","text":"sf object sensor nodes locations","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"The Hakai API Client Class — Client","text":"","code":"try(client$get_stations())"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-post-","dir":"Reference","previous_headings":"","what":"Method post()","title":"The Hakai API Client Class — Client","text":"Send POST request API","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$post(endpoint_url, rec_data)"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Hakai API Client Class — Client","text":"endpoint_url API endpoint url - can full URL relative path appended api_root rec_data dataframe, list, R data structure send part post request payload","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The Hakai API Client Class — Client","text":"post request response status code description","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-put-","dir":"Reference","previous_headings":"","what":"Method put()","title":"The Hakai API Client Class — Client","text":"Send PUT request API","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$put(endpoint_url, rec_data)"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Hakai API Client Class — Client","text":"endpoint_url API endpoint url - can full URL relative path appended api_root rec_data dataframe, list, R data structure send part post request payload","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The Hakai API Client Class — Client","text":"PUT request response status code description","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-patch-","dir":"Reference","previous_headings":"","what":"Method patch()","title":"The Hakai API Client Class — Client","text":"Send PATCH request API","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$patch(endpoint_url, rec_data)"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Hakai API Client Class — Client","text":"endpoint_url API endpoint url - can full URL relative path appended api_root rec_data dataframe, list, R data structure send part post request payload","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The Hakai API Client Class — Client","text":"PATCH request response status code description","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-remove-credentials-","dir":"Reference","previous_headings":"","what":"Method remove_credentials()","title":"The Hakai API Client Class — Client","text":"Remove cached login credentials logout client","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$remove_credentials()"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"The Hakai API Client Class — Client","text":"","code":"try(    client$remove_credentials() )"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The Hakai API Client Class — Client","text":"objects class cloneable method.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hakai API Client Class — Client","text":"","code":"Client$clone(deep = FALSE)"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Hakai API Client Class — Client","text":"deep Whether make deep clone.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/Client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Hakai API Client Class — Client","text":"","code":"if (FALSE) { # \\dontrun{ # Initialize a new client try(   client <- Client$new() )  # Or use environment variable for token Sys.setenv(HAKAI_API_TOKEN = \"token_type=Bearer&access_token=TOKEN\") try(   client <- Client$new() )  # Follow authorization prompts to log in  # Retrieve some data. See <https://hakaiinstitute.github.io/hakai-api/> for options. try(   projects_2020 <- client$get(\"/aco/views/projects?project_year=2020&fields=project_name\") )  try(   print(projects_2020) ) # # A tibble: 20 x 1 #    project_name #    <chr> #  1 Fountain FN #  2 Haig Glacier #  3 Fraser River - Chimney Creek West William Canyon #  4 Cruickshank WS #  ... } # }  ## ------------------------------------------------ ## Method `Client$new` ## ------------------------------------------------  try(    client <- Client$new() ) #> /home/runner/.local/share/R/hakaiApi/.hakai-api-auth-r #> Please go here and authorize: #> https://hecate.hakai.org/api-client-login #>  #> Copy and paste the full credential string from the login page: #>  #> Invalid credential format, try again. # Using environment variable Sys.setenv(HAKAI_API_TOKEN = \"token_type=Bearer&access_token=TOKEN\") try(    client <- Client$new() ) #> Error in if (are_credentials_expired(credentials)) { :  #>   argument is of length zero # Using custom credentials file try(    client <- Client$new(credentials_file = \"/path/to/creds\") ) #> Error in if (are_credentials_expired(credentials)) { :  #>   argument is of length zero  ## ------------------------------------------------ ## Method `Client$get` ## ------------------------------------------------  try(client$get(\"/aco/views/projects\")) #> Error in httr2::req_perform(base_request(resolved_url, token)) :  #>   HTTP 401 Unauthorized. try(client$get(\"https://hecate.hakai.org/api/aco/views/projects\")) #> Error in httr2::req_perform(base_request(resolved_url, token)) :  #>   HTTP 401 Unauthorized.  ## ------------------------------------------------ ## Method `Client$get_stations` ## ------------------------------------------------  try(client$get_stations()) #> Simple feature collection with 27 features and 2 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -128.1432 ymin: 50.116 xmax: -124.8554 ymax: 51.77083 #> Geodetic CRS:  WGS 84 #> # A tibble: 27 × 3 #>    station_id                sensor_node             geometry #>    <chr>                     <chr>                <POINT [°]> #>  1 Buxton                    Buxton      (-128.0178 51.60491) #>  2 Calvert Reference Station RefStn      (-128.1287 51.65195) #>  3 East Buxton               BuxtonEast  (-127.9752 51.58994) #>  4 Ethel                     Ethel       (-127.5317 51.54844) #>  5 Hecate                    Hecate      (-128.0228 51.68257) #>  6 KCBuoy                    KCBuoy       (-127.9663 51.6499) #>  7 Koeye                     Koeye       (-127.8794 51.77083) #>  8 Lookout                   Lookout      (-128.1432 51.6475) #>  9 Orford Buoy               OrfordBuoy  (-124.9018 50.59661) #> 10 Orford Camp               OrfordCamp  (-124.8554 50.59206) #> # ℹ 17 more rows  ## ------------------------------------------------ ## Method `Client$remove_credentials` ## ------------------------------------------------  try(    client$remove_credentials() ) #> [1] TRUE"},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/hakaiApi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hakaiApi: Authenticated HTTP Request Client for the 'Hakai' API — hakaiApi-package","title":"hakaiApi: Authenticated HTTP Request Client for the 'Hakai' API — hakaiApi-package","text":"Initializes class obtains API credentials provides method use credentials make GET requests 'Hakai' API server. Usage instructions documented https://hakaiinstitute.github.io/hakai-api/.","code":""},{"path":[]},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/reference/hakaiApi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hakaiApi: Authenticated HTTP Request Client for the 'Hakai' API — hakaiApi-package","text":"Maintainer: Sam Albers sam.albers@hakai.org Authors: Taylor Denouden taylor.denouden@hakai.org Brett Johnson brett.johnson@hakai.org contributors: Nate Rosenstock nate.rosenstock@hakai.org [contributor] Chris Davis chris.davis@hakai.org [contributor] Hakai Institute [copyright holder]","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/news/index.html","id":"hakaiapi-1059000","dir":"Changelog","previous_headings":"","what":"hakaiApi 1.0.5.9000","title":"hakaiApi 1.0.5.9000","text":"ADd get_stations() method retrieve list stations sf object","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/news/index.html","id":"hakaiapi-105","dir":"Changelog","previous_headings":"","what":"hakaiApi 1.0.5","title":"hakaiApi 1.0.5","text":"CRAN release: 2025-07-10 CRAN fix: Moved credential storage proper user directories added permission prompts comply CRAN policies. Fixed typos auth prompts added test coverage environment variable handling. Fail informative creds expired","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/news/index.html","id":"hakaiapi-104","dir":"Changelog","previous_headings":"","what":"hakaiApi 1.0.4","title":"hakaiApi 1.0.4","text":"CRAN release: 2025-07-08 Enhancements crendentials path now configurable environment variables can also used tokens (#25) Can now use relative urls client initialized (#27) Bug fixes * use redacted headers can’t accidentally saved disk (thx @hadley #28)","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/news/index.html","id":"hakaiapi-103","dir":"Changelog","previous_headings":"","what":"hakaiApi 1.0.3","title":"hakaiApi 1.0.3","text":"CRAN release: 2025-05-27 Bug fixes * get method now returns tibbles list responses * bump minimum R version 4.2 handle using native pipe * change maintainer Enhancements wrap examples try() now setting user agent client extract base_request json2tbl separate functions add unit tests user agent can now customized via HAKAI_API_USER_AGENT environment variable","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/news/index.html","id":"hakaiapi-102","dir":"Changelog","previous_headings":"","what":"hakaiApi 1.0.2","title":"hakaiApi 1.0.2","text":"CRAN release: 2022-04-18 Bug fixes Fixes issue loading cached api credentials sometimes caused cryptic error message failed delete offending corrupted credentials file.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/news/index.html","id":"hakaiapi-101","dir":"Changelog","previous_headings":"","what":"hakaiApi 1.0.1","title":"hakaiApi 1.0.1","text":"CRAN release: 2022-03-17 Enhancements Now uses dplyr::bind_rows robust conversion JSON received server. Bug fixes Fixes issue api credentials saved loaded properly.","code":""},{"path":"https://hakaiinstitute.github.io/hakai-api-client-r/news/index.html","id":"hakaiapi-100","dir":"Changelog","previous_headings":"","what":"hakaiApi 1.0.0","title":"hakaiApi 1.0.0","text":"CRAN release: 2021-05-07 Added NEWS.md file track changes package. Prevent packages dependencies clashing local packages. Add demo code vignettes. Prepared code CRAN. Easier installation using “remotes” package. Update code follow best practices. Update documentation individual R6 class methods.","code":""}]
